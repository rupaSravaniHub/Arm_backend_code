Feature: Retrieve Exception Details

  Scenario: Retrieve valid exception details successfully via UI
    Given I open the initial UI URL "http://localhost:3000/exceptionFilter"
    When I enter "FLOW1047" into the "Flow Id" field
    And I enter "PURCHASEORDERRPA108" into the "Flow Name" field
    And I enter "MS" into the "Region" field
    And I click the "Faults" button
    Then I open the UI URL after form submission "http://frontend:3000/exceptionDetails"
    When I hit the backend API "http://localhost:9090/exception?flowId=FLOW1047&flowName=PURCHASEORDERRPA108&region=MS"
    Then I should see the following exception details displayed on the UI:
      """
   {"messageId":"ID:023b99fd3d67-46063-1737969109007-6:4:1:1:7","flowId":"FLOW1047","flowName":"PURCHASEORDERRPA108","region":"MS","transdata":null,"inboundQueue":"Activemq.PurchaseOrderrpa108.MS.IN","stages":"INGATE.OUTGATE","brokerurl":"tcp://localhost:61616","outboundQueue":"Activemq.PurchaseOrder109.MS.OUT","exceptionTimeStamp":"2025-01-27 15:09:07:221","exceptionRoute":"ActiveMQ Adapter","replayableStatus":"true","errorCode":"512","errorMessage":"com.example.demo.exception.CustomException: Failed to connect to ActiveMQ broker\r\n\tat com.example.demo.service.ActivemqQueue.amqConnectionCheck(ActivemqQueue.java:73)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.apache.camel.support.ObjectHelper.invokeMethodSafe(ObjectHelper.java:469)\r\n\tat org.apache.camel.component.bean.MethodInfo.invoke(MethodInfo.java:493)\r\n\tat org.apache.camel.component.bean.MethodInfo$1.doProceed(MethodInfo.java:315)\r\n\tat org.apache.camel.component.bean.MethodInfo$1.proceed(MethodInfo.java:285)\r\n\tat org.apache.camel.component.bean.AbstractBeanProcessor.useMethodInvocation(AbstractBeanProcessor.java:122)\r\n\tat org.apache.camel.component.bean.AbstractBeanProcessor.process(AbstractBeanProcessor.java:88)\r\n\tat org.apache.camel.component.bean.BeanProcessor.process(BeanProcessor.java:81)\r\n\tat org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:834)\r\n\tat org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:740)\r\n\tat org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.doRun(DefaultReactiveExecutor.java:199)\r\n\tat org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeReactiveWork(DefaultReactiveExecutor.java:189)\r\n\tat org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.tryExecuteReactiveWork(DefaultReactiveExecutor.java:166)\r\n\tat org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:148)\r\n\tat org.apache.camel.impl.engine.DefaultReactiveExecutor.scheduleMain(DefaultReactiveExecutor.java:59)\r\n\tat org.apache.camel.processor.Pipeline.process(Pipeline.java:163)\r\n\tat org.apache.camel.impl.engine.CamelInternalProcessor.processNonTransacted(CamelInternalProcessor.java:355)\r\n\tat org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:331)\r\n\tat org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:82)\r\n\tat org.apache.camel.support.AsyncProcessorSupport.process(AsyncProcessorSupport.java:32)\r\n\tat org.apache.camel.component.jms.EndpointMessageListener.onMessage(EndpointMessageListener.java:132)\r\n\tat org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:787)\r\n\tat org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:742)\r\n\tat org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:720)\r\n\tat org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:333)\r\n\tat org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:270)\r\n\tat org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1257)\r\n\tat org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1247)\r\n\tat org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1140)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:833)\r\n","payload":"{\r\n\"order_id\": \"order01\",\r\n\"customer_id\": \"67890\",\r\n\"address\": \"123 Main St, CapitalState\",\r\n\"region\":\"ME\",\r\n\"items\": [\r\n{\r\n\"name\": \"Widget\",\r\n\"quantity\": \"2\"\r\n},\r\n{\r\n\"name\": \"Gadget\",\r\n\"quantity\": \"1\"\r\n}\r\n]\r\n}"}
      """
    And the response status from the backend API should be 200
When I hit the exceptions backend API "http://localhost:9090/search" with the provided parameters "FLOW1047", "PURCHASEORDERRPA108", and "MS"
    Then I should see the following flow details displayed on the UI:
      """
      {"flowId":"FLOW1047","flowName":"PURCHASEORDERRPA108","stages":"INGATE.OUTGATE","region":"MS","transdata":null,"inbound":{"topic":"","queue":"Activemq.PurchaseOrderrpa108.MS.IN","brokerurl":"tcp://localhost:61616","username":"","password":""},"outbound":[[{"topic":"","queue":"Activemq.PurchaseOrder109.MS.OUT","brokerurl":"tcp://localhost:61616","username":"","password":""}]],"nodes":[{"id":"dndnode_0","type":"Amq","position":{"x":-81.21875,"y":152.5},"data":{"label":"Amq"},"width":40,"height":40,"selected":false,"positionAbsolute":{"x":-81.21875,"y":152.5},"dragging":false},{"id":"dndnode_1","type":"Ingate","position":{"x":28.421875,"y":148.75},"data":{"label":"Ingate"},"width":40,"height":40,"selected":false,"positionAbsolute":{"x":28.421875,"y":148.75},"dragging":false},{"id":"dndnode_2","type":"Outgate","position":{"x":132.921875,"y":147.25},"data":{"label":"Outgate"},"width":40,"height":40,"selected":false,"positionAbsolute":{"x":132.921875,"y":147.25},"dragging":false},{"id":"dndnode_3","type":"Amqout","position":{"x":288.921875,"y":145.75},"data":{"label":"Amqout"},"width":40,"height":40,"selected":true,"dragging":false}],"edges":[{"source":"dndnode_0","sourceHandle":null,"target":"dndnode_1","targetHandle":null,"type":"straight","id":"reactflow__edge-dndnode_0-dndnode_1"},{"source":"dndnode_1","sourceHandle":null,"target":"dndnode_2","targetHandle":null,"type":"straight","id":"reactflow__edge-dndnode_1-dndnode_2"},{"source":"dndnode_2","sourceHandle":null,"target":"dndnode_3","targetHandle":null,"type":"straight","id":"reactflow__edge-dndnode_2-dndnode_3"}]}
   		 """
    And status from the backend API should be 200
